---
- name: Deploy web project infrastructure with Docker (without Docker installation)
  hosts: localhost
  vars:
    project_name: "web_project"
    http_port: 8080
    https_port: 8443
    
    # Версии образов
    apache_version: "2.4"
    php_version: "8.2"
    mysql_version: "8.0"
    kafka_version: "7.4.1"
    
    # MySQL credentials
    mysql_root_password: "secure_root_password"
    mysql_database: "app_db"
    mysql_user: "app_user"
    mysql_password: "secure_db_password"
    
    # Пути для конфигурации
    config_dir: "./config"
    data_dir: "./data"
    web_root: "./www"

  tasks:
    - name: Verify Docker is installed and running
      command: docker --version
      register: docker_check
      ignore_errors: yes
      
    - name: Fail if Docker is not available
      fail:
        msg: "Docker is not installed or not running. Please install Docker first."
      when: docker_check.rc != 0

    - name: Verify Docker Compose is available
      command: docker compose version
      register: docker_compose_check
      ignore_errors: yes
      
    - name: Fail if Docker Compose is not available
      fail:
        msg: "Docker Compose is not available. Please install Docker Compose."
      when: docker_compose_check.rc != 0

    - name: Create project directories
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ config_dir }}/apache"
        - "{{ config_dir }}/php"
        - "{{ config_dir }}/mysql"
        - "{{ data_dir }}/mysql"
        - "{{ web_root }}"

    - name: Generate PHP configuration
      copy:
        content: |
          upload_max_filesize = 64M
          post_max_size = 64M
          memory_limit = 256M
          max_execution_time = 300
          display_errors = Off
          log_errors = On
        dest: "{{ config_dir }}/php/php.ini"

    - name: Generate MySQL configuration
      copy:
        content: |
          [mysqld]
          default-authentication-plugin=mysql_native_password
          character-set-server=utf8mb4
          collation-server=utf8mb4_unicode_ci
        dest: "{{ config_dir }}/mysql/my.cnf"

    - name: Generate docker-compose.yml file
      template:
        src: docker-compose.yml.j2
        dest: ./docker-compose.yml

    - name: Create index.php test file
      copy:
        content: |
          <?php
          phpinfo();
          ?>
        dest: "{{ web_root }}/index.php"

    - name: Start containers with Docker Compose
      community.docker.docker_compose:
        project_src: .
        state: present
        pull: yes
        build: no

    - name: Verify containers are running
      command: docker ps
      register: running_containers
      changed_when: false

    - name: Display running containers
      debug:
        var: running_containers.stdout_lines