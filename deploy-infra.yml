---
- name: Deploy web project infrastructure
  hosts: localhost
  vars:
    project_name: "web_project"
    http_port: 8080
    https_port: 8443
    mysql_port: 3306
    
    # Версии образов
    apache_version: "2.4"
    php_version: "8.2"
    mysql_version: "8.0"
    kafka_version: "7.4.1"
    
    # MySQL credentials
    mysql_root_password: "secure_root_password"
    mysql_database: "app_db"
    mysql_user: "app_user"
    mysql_password: "secure_db_password"
    
    # Пути для конфигурации
    config_dir: "./config"
    data_dir: "./data"
    web_root: "./www"

  tasks:
    - name: Verify Docker is installed
      command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false
      
    - name: Fail if Docker not available
      fail:
        msg: "Docker not installed. Install with: sudo apt install docker.io docker-compose"
      when: docker_check.rc != 0

    - name: Verify Docker Compose is available
      command: docker-compose --version
      register: compose_check
      ignore_errors: yes
      changed_when: false
      
    - name: Fail if Docker Compose not available
      fail:
        msg: "Docker Compose not found. Install with: sudo apt install docker-compose"
      when: compose_check.rc != 0

    - name: Create project directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ config_dir }}/apache"
        - "{{ config_dir }}/php"
        - "{{ config_dir }}/mysql"
        - "{{ data_dir }}/mysql"
        - "{{ web_root }}"

    - name: Generate docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: "./docker-compose.yml"
      vars:
        mysql_port: "{{ mysql_port }}"
        http_port: "{{ http_port }}"
        https_port: "{{ https_port }}"

    - name: Generate PHP configuration
      copy:
        content: |
          upload_max_filesize = 64M
          post_max_size = 64M
          memory_limit = 256M
          max_execution_time = 300
        dest: "{{ config_dir }}/php/php.ini"

    - name: Generate MySQL configuration
      copy:
        content: |
          [mysqld]
          default-authentication-plugin=mysql_native_password
          character-set-server=utf8mb4
          collation-server=utf8mb4_unicode_ci
        dest: "{{ config_dir }}/mysql/my.cnf"

    - name: Create test PHP file
      copy:
        content: "<?php phpinfo(); ?>"
        dest: "{{ web_root }}/index.php"

    - name: Pull Docker images
      command: "docker-compose pull"
      args:
        chdir: "{{ playbook_dir }}"
      register: pull_result
      changed_when: "'Downloaded' in pull_result.stdout"

    - name: Start containers
      command: "docker-compose up -d"
      args:
        chdir: "{{ playbook_dir }}"
      register: up_result
      changed_when: "'Creating' in up_result.stdout or 'Starting' in up_result.stdout"

    - name: Verify containers status
      command: "docker ps --format 'table {{.Names}}\\t{{.Status}}'"
      register: container_status
      changed_when: false

    - name: Show containers status
      debug:
        msg: |
          Containers status:
          {{ container_status.stdout }}