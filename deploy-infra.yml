---
- name: Deploy web project infrastructure
  hosts: localhost
  vars:
    project_name: "web_project"
    http_port: "8080"
    https_port: "8443"
    mysql_port: "3306"
    
    # Версии образов
    apache_version: "2.4"
    php_version: "8.2"
    mysql_version: "8.0"
    kafka_version: "7.4.1"
    
    # MySQL credentials
    mysql_root_password: "secure_root_password"
    mysql_database: "app_db"
    mysql_user: "app_user"
    mysql_password: "secure_db_password"
    
    # Пути для конфигурации
    config_dir: "./config"
    data_dir: "./data"
    web_root: "./www"

  tasks:
    - name: Verify Docker is installed
      command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false
      
    - name: Fail if Docker not available
      fail:
        msg: "Docker not installed. Install with: sudo apt install docker.io"
      when: docker_check.rc != 0

    - name: Create project directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: 0755
      loop:
        - "{{ config_dir }}/apache"
        - "{{ config_dir }}/php"
        - "{{ config_dir }}/mysql"
        - "{{ data_dir }}/mysql"
        - "{{ web_root }}"

    - name: Generate docker-compose.yml
      copy:
        content: |
          version: '3.8'
          services:
            webserver:
              image: httpd:{{ apache_version }}
              ports:
                - "{{ http_port }}:80"
              volumes:
                - ./www:/usr/local/apache2/htdocs/
            
            php:
              image: php:{{ php_version }}-fpm
              volumes:
                - ./www:/var/www/html
            
            db:
              image: mysql:{{ mysql_version }}
              environment:
                MYSQL_ROOT_PASSWORD: {{ mysql_root_password }}
                MYSQL_DATABASE: {{ mysql_database }}
                MYSQL_USER: {{ mysql_user }}
                MYSQL_PASSWORD: {{ mysql_password }}
              ports:
                - "{{ mysql_port }}:3306"
              volumes:
                - {{ data_dir }}/mysql:/var/lib/mysql
        dest: "./docker-compose.yml"

    - name: Generate PHP configuration
      copy:
        content: |
          upload_max_filesize = 64M
          post_max_size = 64M
          memory_limit = 256M
          max_execution_time = 300
        dest: "{{ config_dir }}/php/php.ini"

    - name: Generate MySQL configuration
      copy:
        content: |
          [mysqld]
          default-authentication-plugin=mysql_native_password
          character-set-server=utf8mb4
          collation-server=utf8mb4_unicode_ci
        dest: "{{ config_dir }}/mysql/my.cnf"

    - name: Create test PHP file
      copy:
        content: "<?php phpinfo(); ?>"
        dest: "{{ web_root }}/index.php"

    - name: Pull required Docker images
      command: "docker pull {{ item }}"
      loop:
        - "httpd:{{ apache_version }}"
        - "php:{{ php_version }}-fpm"
        - "mysql:{{ mysql_version }}"

    - name: Start containers using Docker Compose
      command: "docker compose up -d"
      args:
        chdir: "{{ playbook_dir }}"

    - name: Verify containers are running
      command: "docker ps --format \"table {{ '{{' }}.Names{{ '}}' }}\t{{ '{{' }}.Status{{ '}}' }}\""
      register: container_status
      changed_when: false

    - name: Show containers status
      debug:
        msg: |
          Running containers:
          {{ container_status.stdout }}